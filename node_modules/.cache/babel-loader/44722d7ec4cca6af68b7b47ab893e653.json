{"ast":null,"code":"function shuffleArray(array){if(array.length==0){return;}for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array[0];}function getRandomItem(set){var items=Array.from(set);return items[Math.floor(Math.random()*items.length)];}function Rmaze(grid){var WallSetup=function WallSetup(grid){var uniqueSet=new Set();for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){if(i%2==0&&j%2==0){grid[i][j].addWallNeighbors(grid);shuffleArray(grid[i][j].wallNeighbors);grid[i][j].isWall=false;uniqueSet.add(grid[i][j]);}else{if(!grid[i][j].isStart&&!grid[i][j].isEnd){grid[i][j].isWall=true;}}grid[i][j].mazeStatus=\"unvisited\";}}return uniqueSet;};var frontier=new Set();var visited=new Set();var start=getRandomItem(WallSetup(grid));frontier.add(start);visited.add(start);var current=start;current.mazeStatus=\"visited\";function Recurse(grid){frontier.delete(current);var curN=current.wallNeighbors;for(var i=0;i<curN.length;i++){if(curN[i].mazeStatus==\"unvisited\"){frontier.add(curN[i]);//curN[i].connections.push(current);\n}else if(curN[i].mazeStatus===\"frontier\"){//curN[i].connections.push(current);\n}}if(frontier.size==0){return;}current=getRandomItem(frontier);visited.add(current);current.mazeStatus=\"visited\";var adj=[];for(var _i=0;_i<current.wallNeighbors.length;_i++){if(current.wallNeighbors[_i].mazeStatus==\"visited\"){adj.push(current.wallNeighbors[_i]);}}var rand=shuffleArray(adj);grid[(rand.x+1+current.x+1)/2-1][(rand.y+1+current.y+1)/2-1].isWall=false;if(frontier.size>0){Recurse(grid);}}Recurse(grid);return grid;}export default Rmaze;","map":{"version":3,"sources":["E:/CS Projects/visualizer/src/Algorithms/Prims Algorithm.js"],"names":["shuffleArray","array","length","i","j","Math","floor","random","temp","getRandomItem","set","items","Array","from","Rmaze","grid","WallSetup","uniqueSet","Set","addWallNeighbors","wallNeighbors","isWall","add","isStart","isEnd","mazeStatus","frontier","visited","start","current","Recurse","delete","curN","size","adj","push","rand","x","y"],"mappings":"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","sourcesContent":["function shuffleArray(array) {\r\n  if (array.length == 0) {\r\n    return;\r\n  }\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  return array[0];\r\n}\r\nfunction getRandomItem(set) {\r\n  let items = Array.from(set);\r\n  return items[Math.floor(Math.random() * items.length)];\r\n}\r\nfunction Rmaze(grid) {\r\n  const WallSetup = (grid) => {\r\n    let uniqueSet = new Set();\r\n    for (let i = 0; i < grid.length; i++) {\r\n      for (let j = 0; j < grid[i].length; j++) {\r\n        if (i % 2 == 0 && j % 2 == 0) {\r\n          grid[i][j].addWallNeighbors(grid);\r\n\r\n          shuffleArray(grid[i][j].wallNeighbors);\r\n\r\n          grid[i][j].isWall = false;\r\n          uniqueSet.add(grid[i][j]);\r\n        } else {\r\n          if (!grid[i][j].isStart && !grid[i][j].isEnd) {\r\n            grid[i][j].isWall = true;\r\n          }\r\n        }\r\n        grid[i][j].mazeStatus = \"unvisited\";\r\n      }\r\n    }\r\n    return uniqueSet;\r\n  };\r\n  let frontier = new Set();\r\n  let visited = new Set();\r\n\r\n  let start = getRandomItem(WallSetup(grid));\r\n  frontier.add(start);\r\n  visited.add(start);\r\n  let current = start;\r\n  current.mazeStatus = \"visited\";\r\n\r\n  function Recurse(grid) {\r\n    frontier.delete(current);\r\n\r\n    let curN = current.wallNeighbors;\r\n\r\n    for (let i = 0; i < curN.length; i++) {\r\n      if (curN[i].mazeStatus == \"unvisited\") {\r\n        frontier.add(curN[i]);\r\n        //curN[i].connections.push(current);\r\n      } else if (curN[i].mazeStatus === \"frontier\") {\r\n        //curN[i].connections.push(current);\r\n      }\r\n    }\r\n\r\n    if (frontier.size == 0) {\r\n      return;\r\n    }\r\n    current = getRandomItem(frontier);\r\n    visited.add(current);\r\n    current.mazeStatus = \"visited\";\r\n\r\n    let adj = [];\r\n    for (let i = 0; i < current.wallNeighbors.length; i++) {\r\n      if (current.wallNeighbors[i].mazeStatus == \"visited\") {\r\n        adj.push(current.wallNeighbors[i]);\r\n      }\r\n    }\r\n    let rand = shuffleArray(adj);\r\n\r\n    grid[(rand.x + 1 + current.x + 1) / 2 - 1][\r\n      (rand.y + 1 + current.y + 1) / 2 - 1\r\n    ].isWall = false;\r\n\r\n    if (frontier.size > 0) {\r\n      Recurse(grid);\r\n    }\r\n  }\r\n  Recurse(grid);\r\n\r\n  return grid;\r\n}\r\nexport default Rmaze;\r\n"]},"metadata":{},"sourceType":"module"}