{"ast":null,"code":"import _toConsumableArray from\"E:/CS projects/visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/CS projects/visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Node from\"./Node.js\";import\"./Pathfind.css\";import dijkstra from\"../Algorithms/dijkstras.js\";import Rmaze from\"../Algorithms/Prims Algorithm.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function makeRows(){var x=Math.round(window.innerHeight/36);if(x%2==0){return x-1;}else{return x;}}function makecols(){var x=Math.round(window.innerWidth/29);if(x%2==0){return x-1;}else{return x;}}var rows=makeRows();var cols=makecols();var hasStart=true;var hasEnd=true;var nodeStartRow=2;var nodeStartCol=2;var nodeEndRow=rows-3;var nodeEndCol=cols-3;var visualized=false;var visualizing=false;var Pathfind=function Pathfind(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Grid=_useState2[0],setGrid=_useState2[1];useEffect(function(){initializeGrid();},[]);var createSpot=function createSpot(Grid){for(var i=0;i<rows;i++){for(var j=0;j<cols;j++){Grid[i][j]=new Spot(i,j);}}};var initializeGrid=function initializeGrid(){var Grid1=new Array(rows);for(var i=0;i<rows;i++){Grid1[i]=new Array(cols);}createSpot(Grid1);setGrid(function(){return Grid1;});};function Spot(i,j){this.x=i;this.y=j;this.f=0;this.h=0;this.g=0;this.mazeStatus=undefined;this.wallNeighbors=[];this.isWall=false;this.connections=[];this.addWallNeighbors=function(grid){var i=this.x;var j=this.y;if(i>1){this.wallNeighbors.push(grid[i-2][j]);}if(i<rows-2){this.wallNeighbors.push(grid[i+2][j]);}if(j>1){this.wallNeighbors.push(grid[i][j-2]);}if(j<cols-2){this.wallNeighbors.push(grid[i][j+2]);}};this.visited=false;this.isStart=this.x===nodeStartRow&&this.y===nodeStartCol;this.isEnd=this.x===nodeEndRow&&this.y===nodeEndCol;this.neighbors=[];this.previous=undefined;this.addNeighbors=function(grid){var i=this.x;var j=this.y;var rows=grid.length;var cols=grid[1].length;if(i>0){this.neighbors.push(grid[i-1][j]);}if(i<rows-1){this.neighbors.push(grid[i+1][j]);}if(j>0){this.neighbors.push(grid[i][j-1]);}if(j<cols-1){this.neighbors.push(grid[i][j+1]);}if(i>0&&j>0&&!(grid[i-1][j].isWall&&grid[i][j-1].isWall)){this.neighbors.push(grid[i-1][j-1]);}if(j<cols-1&&i<rows-1&&grid[i+1][j].isWall==false&&grid[i][j+1].isWall==false){this.neighbors.push(grid[i+1][j+1]);}if(j<cols-1&&i>0&&!(grid[i-1][j].isWall&&grid[i][j+1].isWall)){this.neighbors.push(grid[i-1][j+1]);}if(j>0&&i<rows-1&&!(grid[i+1][j].isWall&&grid[i][j-1].isWall)){this.neighbors.push(grid[i+1][j-1]);}};}var addNeighbors=function addNeighbors(grid){for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){grid[i][j].addNeighbors(grid);}}};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isDown=_useState4[0],setDown=_useState4[1];var OnDown=function OnDown(x,y){if(visualizing){return;}setDown(function(){return true;});wallUp(x,y);};var OnUp=function OnUp(){setDown(function(){return false;});};var OnEnter=function OnEnter(x,y){if(!isDown){return;}wallUp(x,y);};var Reset=function Reset(){if(visualizing){return;}for(var i=0;i<Grid.length;i++){for(var j=0;j<Grid[i].length;j++){var node=Grid[i][j];node.isWall=false;node.neighbors=[];node.class=node.isStart?\"node-start\":node.isEnd?\"node-end\":node.isWall?\"wall\":\"\";document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node \".concat(node.class);node.f=0;node.h=0;node.g=0;node.visited=false;node.neighbors=[];node.previous=undefined;}}visualized=false;setGrid(function(){return Grid;});};var wallUp=function wallUp(x,y){if(visualized){Reset();}var Grid1=_toConsumableArray(Grid);if(!hasStart&&!Grid1[x][y].isEnd){nodeStartRow=x;nodeStartCol=y;hasStart=true;Grid1[x][y].isStart=true;}else if(!hasEnd&&!Grid1[x][y].isStart){nodeEndRow=x;nodeEndCol=y;hasEnd=true;Grid1[x][y].isEnd=true;}else if(Grid1[x][y].isEnd||Grid1[x][y].isStart||Grid1[x][y].isWall){if(Grid1[x][y].isEnd){nodeEndRow=null;nodeEndCol=null;hasEnd=false;Grid1[x][y].isEnd=false;}if(Grid1[x][y].isStart){nodeStartRow=null;nodeStartCol=null;hasStart=false;Grid1[x][y].isStart=false;}if(Grid1[x][y].isWall){Grid1[x][y].isWall=false;}}else{Grid1[x][y].isWall=true;}setGrid(function(){return Grid1;});};var gridwithNode=/*#__PURE__*/_jsx(\"div\",{children:Grid.map(function(row,rowIndex){return/*#__PURE__*/_jsx(\"div\",{className:\"rowWrapper\",children:row.map(function(col,colIndex){var isStart=col.isStart,isEnd=col.isEnd,isWall=col.isWall;return/*#__PURE__*/_jsx(Node,{isStart:isStart,isEnd:isEnd,row:rowIndex,col:colIndex,OnEnter:OnEnter,OnDown:OnDown,isWall:isWall,OnUp:OnUp},colIndex);})},rowIndex);})});var shortestPath=function shortestPath(shortestPathNodes,startNode,endNode){var _loop=function _loop(i){setTimeout(function(){var node=shortestPathNodes[i];if(node!==startNode&&node!==endNode){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node node-shortest\";}},5*i);};for(var i=0;i<shortestPathNodes.length;i++){_loop(i);}};function visualizePath(){if(!hasStart||!hasEnd){return;}if(visualized){Reset();return;}addNeighbors(Grid);setGrid(function(){return Grid;});var startNode=Grid[nodeStartRow][nodeStartCol];var endNode=Grid[nodeEndRow][nodeEndCol];var path=dijkstra(startNode,endNode);var Path=path.path;var Visited=path.visitedNodes;visualizing=true;var _loop2=function _loop2(i){if(i===Visited.length){setTimeout(function(){shortestPath(Path,startNode,endNode);visualizing=false;},16*i);}else{setTimeout(function(){var node=Visited[i];if(node!==startNode&&node!==endNode){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node node-visited\";}},15*i);}};for(var i=0;i<=Visited.length;i++){_loop2(i);}visualized=true;}var randomWalls=function randomWalls(){if(visualizing){return;}Reset();for(var i=0;i<Grid.length;i++){for(var j=0;j<Grid[i].length;j++){if(Grid[i][j].isEnd||Grid[i][j].isStart){}else if(Math.random(1)<0.2){Grid[i][j].isWall=true;document.getElementById(\"node-\".concat(i,\"-\").concat(j)).className=\"Node wall\";}else{Grid[i][j].isWall=false;}}}setGrid(function(){return Grid;});};function generateMaze(){if(!hasStart||!hasEnd||visualizing){return;}setGrid(function(){return Rmaze(Grid);});visualizing=true;var _loop3=function _loop3(i){setTimeout(function(){var _loop4=function _loop4(j){setTimeout(function(){var node=Grid[i][j];if(!node.isStart&&!node.IsEnd&&node.isWall){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node wall\";}else if(!node.isStart&&!node.isEnd&&!node.isWall){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node\";}if(j==Grid[i].length-1&&i==Grid.length-1){visualizing=false;}},0*j);};for(var j=0;j<Grid[i].length;j++){_loop4(j);}},0*i);};for(var i=0;i<Grid.length;i++){_loop3(i);}}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{children:\"Pathfinding Visualizer\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(\"p\",{children:\"click and drag to create walls - replace start and end nodes with click\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:visualizePath,children:\"Vizualize Path (A*)\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:randomWalls,children:\"Random Walls\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:Reset,children:\"Reset\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:generateMaze,children:\"Generate Maze (Prim's Algorithm)\"})})]}),gridwithNode]});};export default Pathfind;","map":{"version":3,"sources":["E:/CS Projects/visualizer/src/Components/pathfind.js"],"names":["React","useState","useEffect","Node","dijkstra","Rmaze","makeRows","x","Math","round","window","innerHeight","makecols","innerWidth","rows","cols","hasStart","hasEnd","nodeStartRow","nodeStartCol","nodeEndRow","nodeEndCol","visualized","visualizing","Pathfind","Grid","setGrid","initializeGrid","createSpot","i","j","Spot","Grid1","Array","y","f","h","g","mazeStatus","undefined","wallNeighbors","isWall","connections","addWallNeighbors","grid","push","visited","isStart","isEnd","neighbors","previous","addNeighbors","length","isDown","setDown","OnDown","wallUp","OnUp","OnEnter","Reset","node","class","document","getElementById","className","gridwithNode","map","row","rowIndex","col","colIndex","shortestPath","shortestPathNodes","startNode","endNode","setTimeout","visualizePath","path","Path","Visited","visitedNodes","randomWalls","random","generateMaze","IsEnd"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Node from \"./Node.js\";\r\nimport \"./Pathfind.css\";\r\nimport dijkstra from \"../Algorithms/dijkstras.js\";\r\nimport Rmaze from \"../Algorithms/Prims Algorithm.js\";\r\n\r\nfunction makeRows() {\r\n  let x = Math.round(window.innerHeight / 36);\r\n  if (x % 2 == 0) {\r\n    return x - 1;\r\n  } else {\r\n    return x;\r\n  }\r\n}\r\nfunction makecols() {\r\n  let x = Math.round(window.innerWidth / 29);\r\n  if (x % 2 == 0) {\r\n    return x - 1;\r\n  } else {\r\n    return x;\r\n  }\r\n}\r\nconst rows = makeRows();\r\nconst cols = makecols();\r\n\r\nlet hasStart = true;\r\nlet hasEnd = true;\r\nlet nodeStartRow = 2;\r\nlet nodeStartCol = 2;\r\nlet nodeEndRow = rows - 3;\r\nlet nodeEndCol = cols - 3;\r\nlet visualized = false;\r\nlet visualizing = false;\r\n\r\nconst Pathfind = () => {\r\n  const [Grid, setGrid] = useState([]);\r\n\r\n  useEffect(() => {\r\n    initializeGrid();\r\n  }, []);\r\n\r\n  const createSpot = (Grid) => {\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        Grid[i][j] = new Spot(i, j);\r\n      }\r\n    }\r\n  };\r\n\r\n  const initializeGrid = () => {\r\n    const Grid1 = new Array(rows);\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      Grid1[i] = new Array(cols);\r\n    }\r\n    createSpot(Grid1);\r\n\r\n    setGrid(() => Grid1);\r\n  };\r\n\r\n  function Spot(i, j) {\r\n    this.x = i;\r\n    this.y = j;\r\n    this.f = 0;\r\n    this.h = 0;\r\n    this.g = 0;\r\n    this.mazeStatus = undefined;\r\n    this.wallNeighbors = [];\r\n    this.isWall = false;\r\n    this.connections = [];\r\n    this.addWallNeighbors = function (grid) {\r\n      let i = this.x;\r\n      let j = this.y;\r\n\r\n      if (i > 1) {\r\n        this.wallNeighbors.push(grid[i - 2][j]);\r\n      }\r\n      if (i < rows - 2) {\r\n        this.wallNeighbors.push(grid[i + 2][j]);\r\n      }\r\n      if (j > 1) {\r\n        this.wallNeighbors.push(grid[i][j - 2]);\r\n      }\r\n      if (j < cols - 2) {\r\n        this.wallNeighbors.push(grid[i][j + 2]);\r\n      }\r\n    };\r\n\r\n    this.visited = false;\r\n    this.isStart = this.x === nodeStartRow && this.y === nodeStartCol;\r\n    this.isEnd = this.x === nodeEndRow && this.y === nodeEndCol;\r\n    this.neighbors = [];\r\n    this.previous = undefined;\r\n    this.addNeighbors = function (grid) {\r\n      let i = this.x;\r\n      let j = this.y;\r\n      let rows = grid.length;\r\n      let cols = grid[1].length;\r\n\r\n      if (i > 0) {\r\n        this.neighbors.push(grid[i - 1][j]);\r\n      }\r\n      if (i < rows - 1) {\r\n        this.neighbors.push(grid[i + 1][j]);\r\n      }\r\n      if (j > 0) {\r\n        this.neighbors.push(grid[i][j - 1]);\r\n      }\r\n      if (j < cols - 1) {\r\n        this.neighbors.push(grid[i][j + 1]);\r\n      }\r\n\r\n      if (i > 0 && j > 0 && !(grid[i - 1][j].isWall && grid[i][j - 1].isWall)) {\r\n        this.neighbors.push(grid[i - 1][j - 1]);\r\n      }\r\n      if (\r\n        j < cols - 1 &&\r\n        i < rows - 1 &&\r\n        grid[i + 1][j].isWall == false &&\r\n        grid[i][j + 1].isWall == false\r\n      ) {\r\n        this.neighbors.push(grid[i + 1][j + 1]);\r\n      }\r\n\r\n      if (\r\n        j < cols - 1 &&\r\n        i > 0 &&\r\n        !(grid[i - 1][j].isWall && grid[i][j + 1].isWall)\r\n      ) {\r\n        this.neighbors.push(grid[i - 1][j + 1]);\r\n      }\r\n\r\n      if (\r\n        j > 0 &&\r\n        i < rows - 1 &&\r\n        !(grid[i + 1][j].isWall && grid[i][j - 1].isWall)\r\n      ) {\r\n        this.neighbors.push(grid[i + 1][j - 1]);\r\n      }\r\n    };\r\n  }\r\n\r\n  const addNeighbors = (grid) => {\r\n    for (let i = 0; i < grid.length; i++) {\r\n      for (let j = 0; j < grid[i].length; j++) {\r\n        grid[i][j].addNeighbors(grid);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [isDown, setDown] = useState(false);\r\n\r\n  const OnDown = (x, y) => {\r\n    if (visualizing) {\r\n      return;\r\n    }\r\n    setDown(() => true);\r\n    wallUp(x, y);\r\n  };\r\n\r\n  const OnUp = () => {\r\n    setDown(() => false);\r\n  };\r\n\r\n  const OnEnter = (x, y) => {\r\n    if (!isDown) {\r\n      return;\r\n    }\r\n\r\n    wallUp(x, y);\r\n  };\r\n\r\n  const Reset = () => {\r\n    if (visualizing) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < Grid.length; i++) {\r\n      for (let j = 0; j < Grid[i].length; j++) {\r\n        const node = Grid[i][j];\r\n        node.isWall = false;\r\n        node.neighbors = [];\r\n        node.class = node.isStart\r\n          ? \"node-start\"\r\n          : node.isEnd\r\n          ? \"node-end\"\r\n          : node.isWall\r\n          ? \"wall\"\r\n          : \"\";\r\n        document.getElementById(\r\n          `node-${node.x}-${node.y}`\r\n        ).className = `Node ${node.class}`;\r\n        node.f = 0;\r\n        node.h = 0;\r\n        node.g = 0;\r\n        node.visited = false;\r\n        node.neighbors = [];\r\n        node.previous = undefined;\r\n      }\r\n    }\r\n\r\n    visualized = false;\r\n    setGrid(() => Grid);\r\n  };\r\n  const wallUp = (x, y) => {\r\n    if (visualized) {\r\n      Reset();\r\n    }\r\n    let Grid1 = [...Grid];\r\n\r\n    if (!hasStart && !Grid1[x][y].isEnd) {\r\n      nodeStartRow = x;\r\n      nodeStartCol = y;\r\n      hasStart = true;\r\n      Grid1[x][y].isStart = true;\r\n    } else if (!hasEnd && !Grid1[x][y].isStart) {\r\n      nodeEndRow = x;\r\n      nodeEndCol = y;\r\n      hasEnd = true;\r\n      Grid1[x][y].isEnd = true;\r\n    } else if (Grid1[x][y].isEnd || Grid1[x][y].isStart || Grid1[x][y].isWall) {\r\n      if (Grid1[x][y].isEnd) {\r\n        nodeEndRow = null;\r\n        nodeEndCol = null;\r\n        hasEnd = false;\r\n        Grid1[x][y].isEnd = false;\r\n      }\r\n      if (Grid1[x][y].isStart) {\r\n        nodeStartRow = null;\r\n        nodeStartCol = null;\r\n        hasStart = false;\r\n        Grid1[x][y].isStart = false;\r\n      }\r\n      if (Grid1[x][y].isWall) {\r\n        Grid1[x][y].isWall = false;\r\n      }\r\n    } else {\r\n      Grid1[x][y].isWall = true;\r\n    }\r\n\r\n    setGrid(() => Grid1);\r\n  };\r\n\r\n  const gridwithNode = (\r\n    <div>\r\n      {Grid.map((row, rowIndex) => {\r\n        return (\r\n          <div key={rowIndex} className=\"rowWrapper\">\r\n            {row.map((col, colIndex) => {\r\n              const { isStart, isEnd, isWall } = col;\r\n              return (\r\n                <Node\r\n                  key={colIndex}\r\n                  isStart={isStart}\r\n                  isEnd={isEnd}\r\n                  row={rowIndex}\r\n                  col={colIndex}\r\n                  OnEnter={OnEnter}\r\n                  OnDown={OnDown}\r\n                  isWall={isWall}\r\n                  OnUp={OnUp}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  const shortestPath = (shortestPathNodes, startNode, endNode) => {\r\n    for (let i = 0; i < shortestPathNodes.length; i++) {\r\n      setTimeout(() => {\r\n        const node = shortestPathNodes[i];\r\n        if (node !== startNode && node !== endNode) {\r\n          document.getElementById(`node-${node.x}-${node.y}`).className =\r\n            \"Node node-shortest\";\r\n        }\r\n      }, 5 * i);\r\n    }\r\n  };\r\n\r\n  function visualizePath() {\r\n    if (!hasStart || !hasEnd) {\r\n      return;\r\n    }\r\n    if (visualized) {\r\n      Reset();\r\n      return;\r\n    }\r\n    addNeighbors(Grid);\r\n    setGrid(() => Grid);\r\n\r\n    const startNode = Grid[nodeStartRow][nodeStartCol];\r\n    const endNode = Grid[nodeEndRow][nodeEndCol];\r\n\r\n    let path = dijkstra(startNode, endNode);\r\n\r\n    let Path = path.path;\r\n\r\n    let Visited = path.visitedNodes;\r\n\r\n    visualizing = true;\r\n\r\n    for (let i = 0; i <= Visited.length; i++) {\r\n      if (i === Visited.length) {\r\n        setTimeout(() => {\r\n          shortestPath(Path, startNode, endNode);\r\n          visualizing = false;\r\n        }, 16 * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const node = Visited[i];\r\n          if (node !== startNode && node !== endNode) {\r\n            document.getElementById(`node-${node.x}-${node.y}`).className =\r\n              \"Node node-visited\";\r\n          }\r\n        }, 15 * i);\r\n      }\r\n    }\r\n    visualized = true;\r\n  }\r\n\r\n  const randomWalls = () => {\r\n    if (visualizing) {\r\n      return;\r\n    }\r\n\r\n    Reset();\r\n\r\n    for (let i = 0; i < Grid.length; i++) {\r\n      for (let j = 0; j < Grid[i].length; j++) {\r\n        if (Grid[i][j].isEnd || Grid[i][j].isStart) {\r\n        } else if (Math.random(1) < 0.2) {\r\n          Grid[i][j].isWall = true;\r\n          document.getElementById(`node-${i}-${j}`).className = \"Node wall\";\r\n        } else {\r\n          Grid[i][j].isWall = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    setGrid(() => Grid);\r\n  };\r\n\r\n  function generateMaze() {\r\n    if (!hasStart || !hasEnd || visualizing) {\r\n      return;\r\n    }\r\n\r\n    setGrid(() => Rmaze(Grid));\r\n    visualizing = true;\r\n    for (let i = 0; i < Grid.length; i++) {\r\n      setTimeout(() => {\r\n        for (let j = 0; j < Grid[i].length; j++) {\r\n          setTimeout(() => {\r\n            const node = Grid[i][j];\r\n            if (!node.isStart && !node.IsEnd && node.isWall) {\r\n              document.getElementById(`node-${node.x}-${node.y}`).className =\r\n                \"Node wall\";\r\n            } else if (!node.isStart && !node.isEnd && !node.isWall) {\r\n              document.getElementById(`node-${node.x}-${node.y}`).className =\r\n                \"Node\";\r\n            }\r\n            if (j == Grid[i].length - 1 && i == Grid.length - 1) {\r\n              visualizing = false;\r\n            }\r\n          }, 0 * j);\r\n        }\r\n      }, 0 * i);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1>Pathfinding Visualizer</h1>\r\n      </div>\r\n      <div className=\"header\">\r\n        <p>\r\n          click and drag to create walls - replace start and end nodes with\r\n          click\r\n        </p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <button onClick={visualizePath}>Vizualize Path (A*)</button>\r\n        </div>\r\n\r\n        <div className=\"col-sm\">\r\n          <button onClick={randomWalls}>Random Walls</button>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <button onClick={Reset}>Reset</button>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <button onClick={generateMaze}>\r\n            Generate Maze (Prim's Algorithm)\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {gridwithNode}\r\n    </div>\r\n  );\r\n};\r\nexport default Pathfind;\r\n"]},"metadata":{},"sourceType":"module"}