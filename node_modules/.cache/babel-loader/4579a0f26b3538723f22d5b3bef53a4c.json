{"ast":null,"code":"import _toConsumableArray from\"E:/CS projects/visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:/CS projects/visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Node from\"./Node.js\";import\"./Pathfind.css\";import dijkstra from\"../Algorithms/dijkstras.js\";import Rmaze from\"../Algorithms/Prims Algorithm.js\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var rows=Math.round(window.innerHeight/34);var cols=Math.round(window.innerWidth/27);var hasStart=true;var hasEnd=true;var nodeStartRow=2;var nodeStartCol=2;var nodeEndRow=rows-3;var nodeEndCol=cols-3;var visualized=false;var visualizing=false;var Pathfind=function Pathfind(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),Grid=_useState2[0],setGrid=_useState2[1];useEffect(function(){initializeGrid();},[]);var createSpot=function createSpot(Grid){for(var i=0;i<rows;i++){for(var j=0;j<cols;j++){Grid[i][j]=new Spot(i,j);}}};var initializeGrid=function initializeGrid(){var Grid1=new Array(rows);for(var i=0;i<rows;i++){Grid1[i]=new Array(cols);}createSpot(Grid1);setGrid(function(){return Grid1;});};function Spot(i,j){this.x=i;this.y=j;this.f=0;this.h=0;this.g=0;this.mazeStatus=undefined;this.wallNeighbors=[];this.isWall=false;this.connections=[];this.addWallNeighbors=function(grid){var i=this.x;var j=this.y;if(i>1){this.wallNeighbors.push(grid[i-2][j]);}if(i<rows-2){this.wallNeighbors.push(grid[i+2][j]);}if(j>1){this.wallNeighbors.push(grid[i][j-2]);}if(j<cols-2){this.wallNeighbors.push(grid[i][j+2]);}};this.inTransition=false;this.visited=false;this.isStart=this.x===nodeStartRow&&this.y===nodeStartCol;this.isEnd=this.x===nodeEndRow&&this.y===nodeEndCol;this.neighbors=[];this.previous=undefined;this.addNeighbors=function(grid){var i=this.x;var j=this.y;var rows=grid.length;var cols=grid[1].length;if(i>0){this.neighbors.push(grid[i-1][j]);}if(i<rows-1){this.neighbors.push(grid[i+1][j]);}if(j>0){this.neighbors.push(grid[i][j-1]);}if(j<cols-1){this.neighbors.push(grid[i][j+1]);}if(i>0&&j>0&&!(grid[i-1][j].isWall&&grid[i][j-1].isWall)){this.neighbors.push(grid[i-1][j-1]);}if(j<cols-1&&i<rows-1&&grid[i+1][j].isWall==false&&grid[i][j+1].isWall==false){this.neighbors.push(grid[i+1][j+1]);}if(j<cols-1&&i>0&&!(grid[i-1][j].isWall&&grid[i][j+1].isWall)){this.neighbors.push(grid[i-1][j+1]);}if(j>0&&i<rows-1&&!(grid[i+1][j].isWall&&grid[i][j-1].isWall)){this.neighbors.push(grid[i+1][j-1]);}};}var addNeighbors=function addNeighbors(grid){for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){grid[i][j].addNeighbors(grid);}}};var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isDown=_useState4[0],setDown=_useState4[1];var OnDown=function OnDown(x,y){if(visualizing){return;}setDown(function(){return true;});wallUp(x,y);};var OnUp=function OnUp(){setDown(function(){return false;});};var OnEnter=function OnEnter(x,y){if(!isDown||Grid[x][y].inTransition==true){return;}wallUp(x,y);};var Reset=function Reset(){if(visualizing){return;}for(var i=0;i<Grid.length;i++){for(var j=0;j<Grid[i].length;j++){var node=Grid[i][j];node.isWall=false;node.neighbors=[];node.class=node.isStart?\"node-start\":node.isEnd?\"node-end\":node.isWall?\"wall\":\"\";document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node \".concat(node.class);node.f=0;node.h=0;node.g=0;node.visited=false;node.neighbors=[];node.previous=undefined;}}visualized=false;setGrid(function(){return Grid;});};var wallUp=function wallUp(x,y){if(visualized){Reset();}Grid[x][y].inTransition=true;setTimeout(function(){Grid[x][y].inTransition=false;},400);var Grid1=_toConsumableArray(Grid);if(!hasStart&&!Grid1[x][y].isEnd){nodeStartRow=x;nodeStartCol=y;hasStart=true;Grid1[x][y].isStart=true;}else if(!hasEnd&&!Grid1[x][y].isStart){nodeEndRow=x;nodeEndCol=y;hasEnd=true;Grid1[x][y].isEnd=true;}else if(Grid1[x][y].isEnd||Grid1[x][y].isStart||Grid1[x][y].isWall){if(Grid1[x][y].isEnd){nodeEndRow=null;nodeEndCol=null;hasEnd=false;Grid1[x][y].isEnd=false;}if(Grid1[x][y].isStart){nodeStartRow=null;nodeStartCol=null;hasStart=false;Grid1[x][y].isStart=false;}if(Grid1[x][y].isWall){Grid1[x][y].isWall=false;}}else{Grid1[x][y].isWall=true;}setGrid(function(){return Grid1;});};var gridwithNode=/*#__PURE__*/_jsx(\"div\",{onMouseUp:function onMouseUp(){return OnUp();},children:Grid.map(function(row,rowIndex){return/*#__PURE__*/_jsx(\"div\",{className:\"rowWrapper\",children:row.map(function(col,colIndex){var isStart=col.isStart,isEnd=col.isEnd,isWall=col.isWall;return/*#__PURE__*/_jsx(Node,{isStart:isStart,isEnd:isEnd,row:rowIndex,col:colIndex,OnEnter:OnEnter,OnDown:OnDown,isWall:isWall,OnUp:OnUp},colIndex);})},rowIndex);})});var shortestPath=function shortestPath(shortestPathNodes,startNode,endNode){var _loop=function _loop(i){setTimeout(function(){var node=shortestPathNodes[i];if(node!==startNode&&node!==endNode){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node node-shortest\";}},5*i);};for(var i=0;i<shortestPathNodes.length;i++){_loop(i);}};function visualizePath(){if(!hasStart||!hasEnd||visualizing){return;}if(visualized){Reset();return;}addNeighbors(Grid);setGrid(function(){return Grid;});var startNode=Grid[nodeStartRow][nodeStartCol];var endNode=Grid[nodeEndRow][nodeEndCol];var path=dijkstra(startNode,endNode);var Path=path.path;var Visited=path.visitedNodes;visualizing=true;var _loop2=function _loop2(i){if(i===Visited.length){setTimeout(function(){shortestPath(Path,startNode,endNode);visualizing=false;},16*i);}else{setTimeout(function(){var node=Visited[i];if(node!==startNode&&node!==endNode){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node node-visited\";}},15*i);}};for(var i=0;i<=Visited.length;i++){_loop2(i);}visualized=true;}var randomWalls=function randomWalls(){if(visualizing){return;}Reset();for(var i=0;i<Grid.length;i++){for(var j=0;j<Grid[i].length;j++){if(Grid[i][j].isEnd||Grid[i][j].isStart){}else if(Math.random(1)<0.2){Grid[i][j].isWall=true;document.getElementById(\"node-\".concat(i,\"-\").concat(j)).className=\"Node wall\";}else{Grid[i][j].isWall=false;}}}setGrid(function(){return Grid;});};function generateMaze(){if(!hasStart||!hasEnd||visualizing){return;}visualizing=true;setGrid(function(){return Rmaze(Grid);});setTimeout(function(){visualizing=false;},6000);// for (let i = 0; i < Grid.length; i++) {\n//   setTimeout(() => {\n//     for (let j = 0; j < Grid[i].length; j++) {\n//       setTimeout(() => {\n//         const node = Grid[i][j];\n//         if (!node.isStart && !node.IsEnd && node.isWall) {\n//           document.getElementById(`node-${node.x}-${node.y}`).className =\n//             \"Node wall\";\n//         } else if (!node.isStart && !node.isEnd && !node.isWall) {\n//           document.getElementById(`node-${node.x}-${node.y}`).className =\n//             \"Node\";\n//         }\n//         if (j == Grid[i].length - 1 && i == Grid.length - 1) {\n//           visualizing = false;\n//         }\n//       }, 0 * j);\n//     }\n//   }, 0 * i);\n// }\nvisualized=false;}return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Pathfinding Visualizer\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"header\",children:/*#__PURE__*/_jsx(\"p\",{children:\"click and drag to create walls - replace start and end nodes with click\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:visualizePath,children:\"Vizualize Path (A*)\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:randomWalls,children:\"Random Walls\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:Reset,children:\"Reset\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"col-sm\",children:/*#__PURE__*/_jsx(\"button\",{onClick:generateMaze,children:\"Generate Maze (Prim's Algorithm)\"})})]}),gridwithNode]});};export default Pathfind;","map":{"version":3,"sources":["E:/CS Projects/visualizer/src/Components/pathfind.js"],"names":["React","useState","useEffect","Node","dijkstra","Rmaze","rows","Math","round","window","innerHeight","cols","innerWidth","hasStart","hasEnd","nodeStartRow","nodeStartCol","nodeEndRow","nodeEndCol","visualized","visualizing","Pathfind","Grid","setGrid","initializeGrid","createSpot","i","j","Spot","Grid1","Array","x","y","f","h","g","mazeStatus","undefined","wallNeighbors","isWall","connections","addWallNeighbors","grid","push","inTransition","visited","isStart","isEnd","neighbors","previous","addNeighbors","length","isDown","setDown","OnDown","wallUp","OnUp","OnEnter","Reset","node","class","document","getElementById","className","setTimeout","gridwithNode","map","row","rowIndex","col","colIndex","shortestPath","shortestPathNodes","startNode","endNode","visualizePath","path","Path","Visited","visitedNodes","randomWalls","random","generateMaze"],"mappings":"wSAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,IAAP,KAAiB,WAAjB,CACA,MAAO,gBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,KAAP,KAAkB,kCAAlB,C,wFAEA,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,WAAP,CAAqB,EAAhC,CAAb,CACA,GAAMC,CAAAA,IAAI,CAAGJ,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACG,UAAP,CAAoB,EAA/B,CAAb,CAEA,GAAIC,CAAAA,QAAQ,CAAG,IAAf,CACA,GAAIC,CAAAA,MAAM,CAAG,IAAb,CACA,GAAIC,CAAAA,YAAY,CAAG,CAAnB,CACA,GAAIC,CAAAA,YAAY,CAAG,CAAnB,CACA,GAAIC,CAAAA,UAAU,CAAGX,IAAI,CAAG,CAAxB,CACA,GAAIY,CAAAA,UAAU,CAAGP,IAAI,CAAG,CAAxB,CACA,GAAIQ,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAIC,CAAAA,WAAW,CAAG,KAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,eACGpB,QAAQ,CAAC,EAAD,CADX,wCACdqB,IADc,eACRC,OADQ,eAGrBrB,SAAS,CAAC,UAAM,CACdsB,cAAc,GACf,CAFQ,CAEN,EAFM,CAAT,CAIA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACH,IAAD,CAAU,CAC3B,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGpB,IAApB,CAA0BoB,CAAC,EAA3B,CAA+B,CAC7B,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGhB,IAApB,CAA0BgB,CAAC,EAA3B,CAA+B,CAC7BL,IAAI,CAACI,CAAD,CAAJ,CAAQC,CAAR,EAAa,GAAIC,CAAAA,IAAJ,CAASF,CAAT,CAAYC,CAAZ,CAAb,CACD,CACF,CACF,CAND,CAQA,GAAMH,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAMK,CAAAA,KAAK,CAAG,GAAIC,CAAAA,KAAJ,CAAUxB,IAAV,CAAd,CAEA,IAAK,GAAIoB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGpB,IAApB,CAA0BoB,CAAC,EAA3B,CAA+B,CAC7BG,KAAK,CAACH,CAAD,CAAL,CAAW,GAAII,CAAAA,KAAJ,CAAUnB,IAAV,CAAX,CACD,CACDc,UAAU,CAACI,KAAD,CAAV,CAEAN,OAAO,CAAC,iBAAMM,CAAAA,KAAN,EAAD,CAAP,CACD,CATD,CAWA,QAASD,CAAAA,IAAT,CAAcF,CAAd,CAAiBC,CAAjB,CAAoB,CAClB,KAAKI,CAAL,CAASL,CAAT,CACA,KAAKM,CAAL,CAASL,CAAT,CACA,KAAKM,CAAL,CAAS,CAAT,CACA,KAAKC,CAAL,CAAS,CAAT,CACA,KAAKC,CAAL,CAAS,CAAT,CACA,KAAKC,UAAL,CAAkBC,SAAlB,CACA,KAAKC,aAAL,CAAqB,EAArB,CACA,KAAKC,MAAL,CAAc,KAAd,CACA,KAAKC,WAAL,CAAmB,EAAnB,CACA,KAAKC,gBAAL,CAAwB,SAAUC,IAAV,CAAgB,CACtC,GAAIhB,CAAAA,CAAC,CAAG,KAAKK,CAAb,CACA,GAAIJ,CAAAA,CAAC,CAAG,KAAKK,CAAb,CAEA,GAAIN,CAAC,CAAG,CAAR,CAAW,CACT,KAAKY,aAAL,CAAmBK,IAAnB,CAAwBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,CAAxB,EACD,CACD,GAAID,CAAC,CAAGpB,IAAI,CAAG,CAAf,CAAkB,CAChB,KAAKgC,aAAL,CAAmBK,IAAnB,CAAwBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,CAAxB,EACD,CACD,GAAIA,CAAC,CAAG,CAAR,CAAW,CACT,KAAKW,aAAL,CAAmBK,IAAnB,CAAwBD,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,CAAxB,EACD,CACD,GAAIA,CAAC,CAAGhB,IAAI,CAAG,CAAf,CAAkB,CAChB,KAAK2B,aAAL,CAAmBK,IAAnB,CAAwBD,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,CAAxB,EACD,CACF,CAhBD,CAiBA,KAAKiB,YAAL,CAAoB,KAApB,CACA,KAAKC,OAAL,CAAe,KAAf,CACA,KAAKC,OAAL,CAAe,KAAKf,CAAL,GAAWhB,YAAX,EAA2B,KAAKiB,CAAL,GAAWhB,YAArD,CACA,KAAK+B,KAAL,CAAa,KAAKhB,CAAL,GAAWd,UAAX,EAAyB,KAAKe,CAAL,GAAWd,UAAjD,CACA,KAAK8B,SAAL,CAAiB,EAAjB,CACA,KAAKC,QAAL,CAAgBZ,SAAhB,CACA,KAAKa,YAAL,CAAoB,SAAUR,IAAV,CAAgB,CAClC,GAAIhB,CAAAA,CAAC,CAAG,KAAKK,CAAb,CACA,GAAIJ,CAAAA,CAAC,CAAG,KAAKK,CAAb,CACA,GAAI1B,CAAAA,IAAI,CAAGoC,IAAI,CAACS,MAAhB,CACA,GAAIxC,CAAAA,IAAI,CAAG+B,IAAI,CAAC,CAAD,CAAJ,CAAQS,MAAnB,CAEA,GAAIzB,CAAC,CAAG,CAAR,CAAW,CACT,KAAKsB,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,CAApB,EACD,CACD,GAAID,CAAC,CAAGpB,IAAI,CAAG,CAAf,CAAkB,CAChB,KAAK0C,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,CAApB,EACD,CACD,GAAIA,CAAC,CAAG,CAAR,CAAW,CACT,KAAKqB,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,CAApB,EACD,CACD,GAAIA,CAAC,CAAGhB,IAAI,CAAG,CAAf,CAAkB,CAChB,KAAKqC,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,CAApB,EACD,CAED,GAAID,CAAC,CAAG,CAAJ,EAASC,CAAC,CAAG,CAAb,EAAkB,EAAEe,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,EAAeY,MAAf,EAAyBG,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,EAAeY,MAA1C,CAAtB,CAAyE,CACvE,KAAKS,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAC,CAAG,CAAhB,CAApB,EACD,CACD,GACEA,CAAC,CAAGhB,IAAI,CAAG,CAAX,EACAe,CAAC,CAAGpB,IAAI,CAAG,CADX,EAEAoC,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,EAAeY,MAAf,EAAyB,KAFzB,EAGAG,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,EAAeY,MAAf,EAAyB,KAJ3B,CAKE,CACA,KAAKS,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAC,CAAG,CAAhB,CAApB,EACD,CAED,GACEA,CAAC,CAAGhB,IAAI,CAAG,CAAX,EACAe,CAAC,CAAG,CADJ,EAEA,EAAEgB,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,EAAeY,MAAf,EAAyBG,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,EAAeY,MAA1C,CAHF,CAIE,CACA,KAAKS,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAC,CAAG,CAAhB,CAApB,EACD,CAED,GACEA,CAAC,CAAG,CAAJ,EACAD,CAAC,CAAGpB,IAAI,CAAG,CADX,EAEA,EAAEoC,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAZ,EAAeY,MAAf,EAAyBG,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAC,CAAG,CAAZ,EAAeY,MAA1C,CAHF,CAIE,CACA,KAAKS,SAAL,CAAeL,IAAf,CAAoBD,IAAI,CAAChB,CAAC,CAAG,CAAL,CAAJ,CAAYC,CAAC,CAAG,CAAhB,CAApB,EACD,CACF,CA9CD,CA+CD,CAED,GAAMuB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,IAAD,CAAU,CAC7B,IAAK,GAAIhB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGgB,IAAI,CAACS,MAAzB,CAAiCzB,CAAC,EAAlC,CAAsC,CACpC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGe,IAAI,CAAChB,CAAD,CAAJ,CAAQyB,MAA5B,CAAoCxB,CAAC,EAArC,CAAyC,CACvCe,IAAI,CAAChB,CAAD,CAAJ,CAAQC,CAAR,EAAWuB,YAAX,CAAwBR,IAAxB,EACD,CACF,CACF,CAND,CA5GqB,eAoHKzC,QAAQ,CAAC,KAAD,CApHb,yCAoHdmD,MApHc,eAoHNC,OApHM,eAsHrB,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACvB,CAAD,CAAIC,CAAJ,CAAU,CACvB,GAAIZ,WAAJ,CAAiB,CACf,OACD,CACDiC,OAAO,CAAC,iBAAM,KAAN,EAAD,CAAP,CACAE,MAAM,CAACxB,CAAD,CAAIC,CAAJ,CAAN,CACD,CAND,CAQA,GAAMwB,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAAM,CACjBH,OAAO,CAAC,iBAAM,MAAN,EAAD,CAAP,CACD,CAFD,CAIA,GAAMI,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAAC1B,CAAD,CAAIC,CAAJ,CAAU,CACxB,GAAI,CAACoB,MAAD,EAAW9B,IAAI,CAACS,CAAD,CAAJ,CAAQC,CAAR,EAAWY,YAAX,EAA2B,IAA1C,CAAgD,CAC9C,OACD,CAEDW,MAAM,CAACxB,CAAD,CAAIC,CAAJ,CAAN,CACD,CAND,CAQA,GAAM0B,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,EAAM,CAClB,GAAItC,WAAJ,CAAiB,CACf,OACD,CAED,IAAK,GAAIM,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,IAAI,CAAC6B,MAAzB,CAAiCzB,CAAC,EAAlC,CAAsC,CACpC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,IAAI,CAACI,CAAD,CAAJ,CAAQyB,MAA5B,CAAoCxB,CAAC,EAArC,CAAyC,CACvC,GAAMgC,CAAAA,IAAI,CAAGrC,IAAI,CAACI,CAAD,CAAJ,CAAQC,CAAR,CAAb,CACAgC,IAAI,CAACpB,MAAL,CAAc,KAAd,CACAoB,IAAI,CAACX,SAAL,CAAiB,EAAjB,CACAW,IAAI,CAACC,KAAL,CAAaD,IAAI,CAACb,OAAL,CACT,YADS,CAETa,IAAI,CAACZ,KAAL,CACA,UADA,CAEAY,IAAI,CAACpB,MAAL,CACA,MADA,CAEA,EANJ,CAOAsB,QAAQ,CAACC,cAAT,gBACUH,IAAI,CAAC5B,CADf,aACoB4B,IAAI,CAAC3B,CADzB,GAEE+B,SAFF,gBAEsBJ,IAAI,CAACC,KAF3B,EAGAD,IAAI,CAAC1B,CAAL,CAAS,CAAT,CACA0B,IAAI,CAACzB,CAAL,CAAS,CAAT,CACAyB,IAAI,CAACxB,CAAL,CAAS,CAAT,CACAwB,IAAI,CAACd,OAAL,CAAe,KAAf,CACAc,IAAI,CAACX,SAAL,CAAiB,EAAjB,CACAW,IAAI,CAACV,QAAL,CAAgBZ,SAAhB,CACD,CACF,CAEDlB,UAAU,CAAG,KAAb,CACAI,OAAO,CAAC,iBAAMD,CAAAA,IAAN,EAAD,CAAP,CACD,CA/BD,CAgCA,GAAMiC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACxB,CAAD,CAAIC,CAAJ,CAAU,CACvB,GAAIb,UAAJ,CAAgB,CACduC,KAAK,GACN,CACDpC,IAAI,CAACS,CAAD,CAAJ,CAAQC,CAAR,EAAWY,YAAX,CAA0B,IAA1B,CACAoB,UAAU,CAAC,UAAM,CACf1C,IAAI,CAACS,CAAD,CAAJ,CAAQC,CAAR,EAAWY,YAAX,CAA0B,KAA1B,CACD,CAFS,CAEP,GAFO,CAAV,CAGA,GAAIf,CAAAA,KAAK,oBAAOP,IAAP,CAAT,CAEA,GAAI,CAACT,QAAD,EAAa,CAACgB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYe,KAA9B,CAAqC,CACnChC,YAAY,CAAGgB,CAAf,CACAf,YAAY,CAAGgB,CAAf,CACAnB,QAAQ,CAAG,IAAX,CACAgB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYc,OAAZ,CAAsB,IAAtB,CACD,CALD,IAKO,IAAI,CAAChC,MAAD,EAAW,CAACe,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYc,OAA5B,CAAqC,CAC1C7B,UAAU,CAAGc,CAAb,CACAb,UAAU,CAAGc,CAAb,CACAlB,MAAM,CAAG,IAAT,CACAe,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYe,KAAZ,CAAoB,IAApB,CACD,CALM,IAKA,IAAIlB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYe,KAAZ,EAAqBlB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYc,OAAjC,EAA4CjB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYO,MAA5D,CAAoE,CACzE,GAAIV,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYe,KAAhB,CAAuB,CACrB9B,UAAU,CAAG,IAAb,CACAC,UAAU,CAAG,IAAb,CACAJ,MAAM,CAAG,KAAT,CACAe,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYe,KAAZ,CAAoB,KAApB,CACD,CACD,GAAIlB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYc,OAAhB,CAAyB,CACvB/B,YAAY,CAAG,IAAf,CACAC,YAAY,CAAG,IAAf,CACAH,QAAQ,CAAG,KAAX,CACAgB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYc,OAAZ,CAAsB,KAAtB,CACD,CACD,GAAIjB,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYO,MAAhB,CAAwB,CACtBV,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYO,MAAZ,CAAqB,KAArB,CACD,CACF,CAhBM,IAgBA,CACLV,KAAK,CAACE,CAAD,CAAL,CAASC,CAAT,EAAYO,MAAZ,CAAqB,IAArB,CACD,CAEDhB,OAAO,CAAC,iBAAMM,CAAAA,KAAN,EAAD,CAAP,CACD,CAzCD,CA2CA,GAAMoC,CAAAA,YAAY,cAChB,YAAK,SAAS,CAAE,2BAAMT,CAAAA,IAAI,EAAV,EAAhB,UACGlC,IAAI,CAAC4C,GAAL,CAAS,SAACC,GAAD,CAAMC,QAAN,CAAmB,CAC3B,mBACE,YAAoB,SAAS,CAAC,YAA9B,UACGD,GAAG,CAACD,GAAJ,CAAQ,SAACG,GAAD,CAAMC,QAAN,CAAmB,IAClBxB,CAAAA,OADkB,CACSuB,GADT,CAClBvB,OADkB,CACTC,KADS,CACSsB,GADT,CACTtB,KADS,CACFR,MADE,CACS8B,GADT,CACF9B,MADE,CAE1B,mBACE,KAAC,IAAD,EAEE,OAAO,CAAEO,OAFX,CAGE,KAAK,CAAEC,KAHT,CAIE,GAAG,CAAEqB,QAJP,CAKE,GAAG,CAAEE,QALP,CAME,OAAO,CAAEb,OANX,CAOE,MAAM,CAAEH,MAPV,CAQE,MAAM,CAAEf,MARV,CASE,IAAI,CAAEiB,IATR,EACOc,QADP,CADF,CAaD,CAfA,CADH,EAAUF,QAAV,CADF,CAoBD,CArBA,CADH,EADF,CA2BA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,iBAAD,CAAoBC,SAApB,CAA+BC,OAA/B,CAA2C,0BACrDhD,CADqD,EAE5DsC,UAAU,CAAC,UAAM,CACf,GAAML,CAAAA,IAAI,CAAGa,iBAAiB,CAAC9C,CAAD,CAA9B,CACA,GAAIiC,IAAI,GAAKc,SAAT,EAAsBd,IAAI,GAAKe,OAAnC,CAA4C,CAC1Cb,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC5B,CAArC,aAA0C4B,IAAI,CAAC3B,CAA/C,GAAoD+B,SAApD,CACE,oBADF,CAED,CACF,CANS,CAMP,EAAIrC,CANG,CAAV,CAF4D,EAC9D,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG8C,iBAAiB,CAACrB,MAAtC,CAA8CzB,CAAC,EAA/C,CAAmD,OAA1CA,CAA0C,EAQlD,CACF,CAVD,CAYA,QAASiD,CAAAA,aAAT,EAAyB,CACvB,GAAI,CAAC9D,QAAD,EAAa,CAACC,MAAd,EAAwBM,WAA5B,CAAyC,CACvC,OACD,CACD,GAAID,UAAJ,CAAgB,CACduC,KAAK,GACL,OACD,CACDR,YAAY,CAAC5B,IAAD,CAAZ,CACAC,OAAO,CAAC,iBAAMD,CAAAA,IAAN,EAAD,CAAP,CAEA,GAAMmD,CAAAA,SAAS,CAAGnD,IAAI,CAACP,YAAD,CAAJ,CAAmBC,YAAnB,CAAlB,CACA,GAAM0D,CAAAA,OAAO,CAAGpD,IAAI,CAACL,UAAD,CAAJ,CAAiBC,UAAjB,CAAhB,CAEA,GAAI0D,CAAAA,IAAI,CAAGxE,QAAQ,CAACqE,SAAD,CAAYC,OAAZ,CAAnB,CAEA,GAAIG,CAAAA,IAAI,CAAGD,IAAI,CAACA,IAAhB,CAEA,GAAIE,CAAAA,OAAO,CAAGF,IAAI,CAACG,YAAnB,CAEA3D,WAAW,CAAG,IAAd,CApBuB,2BAsBdM,CAtBc,EAuBrB,GAAIA,CAAC,GAAKoD,OAAO,CAAC3B,MAAlB,CAA0B,CACxBa,UAAU,CAAC,UAAM,CACfO,YAAY,CAACM,IAAD,CAAOJ,SAAP,CAAkBC,OAAlB,CAAZ,CACAtD,WAAW,CAAG,KAAd,CACD,CAHS,CAGP,GAAKM,CAHE,CAAV,CAID,CALD,IAKO,CACLsC,UAAU,CAAC,UAAM,CACf,GAAML,CAAAA,IAAI,CAAGmB,OAAO,CAACpD,CAAD,CAApB,CACA,GAAIiC,IAAI,GAAKc,SAAT,EAAsBd,IAAI,GAAKe,OAAnC,CAA4C,CAC1Cb,QAAQ,CAACC,cAAT,gBAAgCH,IAAI,CAAC5B,CAArC,aAA0C4B,IAAI,CAAC3B,CAA/C,GAAoD+B,SAApD,CACE,mBADF,CAED,CACF,CANS,CAMP,GAAKrC,CANE,CAAV,CAOD,CApCoB,EAsBvB,IAAK,GAAIA,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,EAAIoD,OAAO,CAAC3B,MAA7B,CAAqCzB,CAAC,EAAtC,CAA0C,QAAjCA,CAAiC,EAezC,CACDP,UAAU,CAAG,IAAb,CACD,CAED,GAAM6D,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAI5D,WAAJ,CAAiB,CACf,OACD,CAEDsC,KAAK,GAEL,IAAK,GAAIhC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGJ,IAAI,CAAC6B,MAAzB,CAAiCzB,CAAC,EAAlC,CAAsC,CACpC,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGL,IAAI,CAACI,CAAD,CAAJ,CAAQyB,MAA5B,CAAoCxB,CAAC,EAArC,CAAyC,CACvC,GAAIL,IAAI,CAACI,CAAD,CAAJ,CAAQC,CAAR,EAAWoB,KAAX,EAAoBzB,IAAI,CAACI,CAAD,CAAJ,CAAQC,CAAR,EAAWmB,OAAnC,CAA4C,CAC3C,CADD,IACO,IAAIvC,IAAI,CAAC0E,MAAL,CAAY,CAAZ,EAAiB,GAArB,CAA0B,CAC/B3D,IAAI,CAACI,CAAD,CAAJ,CAAQC,CAAR,EAAWY,MAAX,CAAoB,IAApB,CACAsB,QAAQ,CAACC,cAAT,gBAAgCpC,CAAhC,aAAqCC,CAArC,GAA0CoC,SAA1C,CAAsD,WAAtD,CACD,CAHM,IAGA,CACLzC,IAAI,CAACI,CAAD,CAAJ,CAAQC,CAAR,EAAWY,MAAX,CAAoB,KAApB,CACD,CACF,CACF,CAEDhB,OAAO,CAAC,iBAAMD,CAAAA,IAAN,EAAD,CAAP,CACD,CApBD,CAsBA,QAAS4D,CAAAA,YAAT,EAAwB,CACtB,GAAI,CAACrE,QAAD,EAAa,CAACC,MAAd,EAAwBM,WAA5B,CAAyC,CACvC,OACD,CACDA,WAAW,CAAG,IAAd,CACAG,OAAO,CAAC,iBAAMlB,CAAAA,KAAK,CAACiB,IAAD,CAAX,EAAD,CAAP,CACA0C,UAAU,CAAC,UAAM,CACf5C,WAAW,CAAG,KAAd,CACD,CAFS,CAEP,IAFO,CAAV,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAD,UAAU,CAAG,KAAb,CACD,CACD,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,YAAK,SAAS,CAAC,QAAf,uBACE,WAAI,SAAS,CAAC,OAAd,oCADF,EADF,cAIE,YAAK,SAAS,CAAC,QAAf,uBACE,8FADF,EAJF,cAUE,aAAK,SAAS,CAAC,KAAf,wBACE,YAAK,SAAS,CAAC,QAAf,uBACE,eAAQ,OAAO,CAAEwD,aAAjB,iCADF,EADF,cAKE,YAAK,SAAS,CAAC,QAAf,uBACE,eAAQ,OAAO,CAAEK,WAAjB,0BADF,EALF,cAQE,YAAK,SAAS,CAAC,QAAf,uBACE,eAAQ,OAAO,CAAEtB,KAAjB,mBADF,EARF,cAWE,YAAK,SAAS,CAAC,QAAf,uBACE,eAAQ,OAAO,CAAEwB,YAAjB,8CADF,EAXF,GAVF,CA2BGjB,YA3BH,GADF,CA+BD,CAxXD,CAyXA,cAAe5C,CAAAA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Node from \"./Node.js\";\r\nimport \"./Pathfind.css\";\r\nimport dijkstra from \"../Algorithms/dijkstras.js\";\r\nimport Rmaze from \"../Algorithms/Prims Algorithm.js\";\r\n\r\nconst rows = Math.round(window.innerHeight / 34);\r\nconst cols = Math.round(window.innerWidth / 27);\r\n\r\nlet hasStart = true;\r\nlet hasEnd = true;\r\nlet nodeStartRow = 2;\r\nlet nodeStartCol = 2;\r\nlet nodeEndRow = rows - 3;\r\nlet nodeEndCol = cols - 3;\r\nlet visualized = false;\r\nlet visualizing = false;\r\n\r\nconst Pathfind = () => {\r\n  const [Grid, setGrid] = useState([]);\r\n\r\n  useEffect(() => {\r\n    initializeGrid();\r\n  }, []);\r\n\r\n  const createSpot = (Grid) => {\r\n    for (let i = 0; i < rows; i++) {\r\n      for (let j = 0; j < cols; j++) {\r\n        Grid[i][j] = new Spot(i, j);\r\n      }\r\n    }\r\n  };\r\n\r\n  const initializeGrid = () => {\r\n    const Grid1 = new Array(rows);\r\n\r\n    for (let i = 0; i < rows; i++) {\r\n      Grid1[i] = new Array(cols);\r\n    }\r\n    createSpot(Grid1);\r\n\r\n    setGrid(() => Grid1);\r\n  };\r\n\r\n  function Spot(i, j) {\r\n    this.x = i;\r\n    this.y = j;\r\n    this.f = 0;\r\n    this.h = 0;\r\n    this.g = 0;\r\n    this.mazeStatus = undefined;\r\n    this.wallNeighbors = [];\r\n    this.isWall = false;\r\n    this.connections = [];\r\n    this.addWallNeighbors = function (grid) {\r\n      let i = this.x;\r\n      let j = this.y;\r\n\r\n      if (i > 1) {\r\n        this.wallNeighbors.push(grid[i - 2][j]);\r\n      }\r\n      if (i < rows - 2) {\r\n        this.wallNeighbors.push(grid[i + 2][j]);\r\n      }\r\n      if (j > 1) {\r\n        this.wallNeighbors.push(grid[i][j - 2]);\r\n      }\r\n      if (j < cols - 2) {\r\n        this.wallNeighbors.push(grid[i][j + 2]);\r\n      }\r\n    };\r\n    this.inTransition = false;\r\n    this.visited = false;\r\n    this.isStart = this.x === nodeStartRow && this.y === nodeStartCol;\r\n    this.isEnd = this.x === nodeEndRow && this.y === nodeEndCol;\r\n    this.neighbors = [];\r\n    this.previous = undefined;\r\n    this.addNeighbors = function (grid) {\r\n      let i = this.x;\r\n      let j = this.y;\r\n      let rows = grid.length;\r\n      let cols = grid[1].length;\r\n\r\n      if (i > 0) {\r\n        this.neighbors.push(grid[i - 1][j]);\r\n      }\r\n      if (i < rows - 1) {\r\n        this.neighbors.push(grid[i + 1][j]);\r\n      }\r\n      if (j > 0) {\r\n        this.neighbors.push(grid[i][j - 1]);\r\n      }\r\n      if (j < cols - 1) {\r\n        this.neighbors.push(grid[i][j + 1]);\r\n      }\r\n\r\n      if (i > 0 && j > 0 && !(grid[i - 1][j].isWall && grid[i][j - 1].isWall)) {\r\n        this.neighbors.push(grid[i - 1][j - 1]);\r\n      }\r\n      if (\r\n        j < cols - 1 &&\r\n        i < rows - 1 &&\r\n        grid[i + 1][j].isWall == false &&\r\n        grid[i][j + 1].isWall == false\r\n      ) {\r\n        this.neighbors.push(grid[i + 1][j + 1]);\r\n      }\r\n\r\n      if (\r\n        j < cols - 1 &&\r\n        i > 0 &&\r\n        !(grid[i - 1][j].isWall && grid[i][j + 1].isWall)\r\n      ) {\r\n        this.neighbors.push(grid[i - 1][j + 1]);\r\n      }\r\n\r\n      if (\r\n        j > 0 &&\r\n        i < rows - 1 &&\r\n        !(grid[i + 1][j].isWall && grid[i][j - 1].isWall)\r\n      ) {\r\n        this.neighbors.push(grid[i + 1][j - 1]);\r\n      }\r\n    };\r\n  }\r\n\r\n  const addNeighbors = (grid) => {\r\n    for (let i = 0; i < grid.length; i++) {\r\n      for (let j = 0; j < grid[i].length; j++) {\r\n        grid[i][j].addNeighbors(grid);\r\n      }\r\n    }\r\n  };\r\n\r\n  const [isDown, setDown] = useState(false);\r\n\r\n  const OnDown = (x, y) => {\r\n    if (visualizing) {\r\n      return;\r\n    }\r\n    setDown(() => true);\r\n    wallUp(x, y);\r\n  };\r\n\r\n  const OnUp = () => {\r\n    setDown(() => false);\r\n  };\r\n\r\n  const OnEnter = (x, y) => {\r\n    if (!isDown || Grid[x][y].inTransition == true) {\r\n      return;\r\n    }\r\n\r\n    wallUp(x, y);\r\n  };\r\n\r\n  const Reset = () => {\r\n    if (visualizing) {\r\n      return;\r\n    }\r\n\r\n    for (let i = 0; i < Grid.length; i++) {\r\n      for (let j = 0; j < Grid[i].length; j++) {\r\n        const node = Grid[i][j];\r\n        node.isWall = false;\r\n        node.neighbors = [];\r\n        node.class = node.isStart\r\n          ? \"node-start\"\r\n          : node.isEnd\r\n          ? \"node-end\"\r\n          : node.isWall\r\n          ? \"wall\"\r\n          : \"\";\r\n        document.getElementById(\r\n          `node-${node.x}-${node.y}`\r\n        ).className = `Node ${node.class}`;\r\n        node.f = 0;\r\n        node.h = 0;\r\n        node.g = 0;\r\n        node.visited = false;\r\n        node.neighbors = [];\r\n        node.previous = undefined;\r\n      }\r\n    }\r\n\r\n    visualized = false;\r\n    setGrid(() => Grid);\r\n  };\r\n  const wallUp = (x, y) => {\r\n    if (visualized) {\r\n      Reset();\r\n    }\r\n    Grid[x][y].inTransition = true;\r\n    setTimeout(() => {\r\n      Grid[x][y].inTransition = false;\r\n    }, 400);\r\n    let Grid1 = [...Grid];\r\n\r\n    if (!hasStart && !Grid1[x][y].isEnd) {\r\n      nodeStartRow = x;\r\n      nodeStartCol = y;\r\n      hasStart = true;\r\n      Grid1[x][y].isStart = true;\r\n    } else if (!hasEnd && !Grid1[x][y].isStart) {\r\n      nodeEndRow = x;\r\n      nodeEndCol = y;\r\n      hasEnd = true;\r\n      Grid1[x][y].isEnd = true;\r\n    } else if (Grid1[x][y].isEnd || Grid1[x][y].isStart || Grid1[x][y].isWall) {\r\n      if (Grid1[x][y].isEnd) {\r\n        nodeEndRow = null;\r\n        nodeEndCol = null;\r\n        hasEnd = false;\r\n        Grid1[x][y].isEnd = false;\r\n      }\r\n      if (Grid1[x][y].isStart) {\r\n        nodeStartRow = null;\r\n        nodeStartCol = null;\r\n        hasStart = false;\r\n        Grid1[x][y].isStart = false;\r\n      }\r\n      if (Grid1[x][y].isWall) {\r\n        Grid1[x][y].isWall = false;\r\n      }\r\n    } else {\r\n      Grid1[x][y].isWall = true;\r\n    }\r\n\r\n    setGrid(() => Grid1);\r\n  };\r\n\r\n  const gridwithNode = (\r\n    <div onMouseUp={() => OnUp()}>\r\n      {Grid.map((row, rowIndex) => {\r\n        return (\r\n          <div key={rowIndex} className=\"rowWrapper\">\r\n            {row.map((col, colIndex) => {\r\n              const { isStart, isEnd, isWall } = col;\r\n              return (\r\n                <Node\r\n                  key={colIndex}\r\n                  isStart={isStart}\r\n                  isEnd={isEnd}\r\n                  row={rowIndex}\r\n                  col={colIndex}\r\n                  OnEnter={OnEnter}\r\n                  OnDown={OnDown}\r\n                  isWall={isWall}\r\n                  OnUp={OnUp}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n\r\n  const shortestPath = (shortestPathNodes, startNode, endNode) => {\r\n    for (let i = 0; i < shortestPathNodes.length; i++) {\r\n      setTimeout(() => {\r\n        const node = shortestPathNodes[i];\r\n        if (node !== startNode && node !== endNode) {\r\n          document.getElementById(`node-${node.x}-${node.y}`).className =\r\n            \"Node node-shortest\";\r\n        }\r\n      }, 5 * i);\r\n    }\r\n  };\r\n\r\n  function visualizePath() {\r\n    if (!hasStart || !hasEnd || visualizing) {\r\n      return;\r\n    }\r\n    if (visualized) {\r\n      Reset();\r\n      return;\r\n    }\r\n    addNeighbors(Grid);\r\n    setGrid(() => Grid);\r\n\r\n    const startNode = Grid[nodeStartRow][nodeStartCol];\r\n    const endNode = Grid[nodeEndRow][nodeEndCol];\r\n\r\n    let path = dijkstra(startNode, endNode);\r\n\r\n    let Path = path.path;\r\n\r\n    let Visited = path.visitedNodes;\r\n\r\n    visualizing = true;\r\n\r\n    for (let i = 0; i <= Visited.length; i++) {\r\n      if (i === Visited.length) {\r\n        setTimeout(() => {\r\n          shortestPath(Path, startNode, endNode);\r\n          visualizing = false;\r\n        }, 16 * i);\r\n      } else {\r\n        setTimeout(() => {\r\n          const node = Visited[i];\r\n          if (node !== startNode && node !== endNode) {\r\n            document.getElementById(`node-${node.x}-${node.y}`).className =\r\n              \"Node node-visited\";\r\n          }\r\n        }, 15 * i);\r\n      }\r\n    }\r\n    visualized = true;\r\n  }\r\n\r\n  const randomWalls = () => {\r\n    if (visualizing) {\r\n      return;\r\n    }\r\n\r\n    Reset();\r\n\r\n    for (let i = 0; i < Grid.length; i++) {\r\n      for (let j = 0; j < Grid[i].length; j++) {\r\n        if (Grid[i][j].isEnd || Grid[i][j].isStart) {\r\n        } else if (Math.random(1) < 0.2) {\r\n          Grid[i][j].isWall = true;\r\n          document.getElementById(`node-${i}-${j}`).className = \"Node wall\";\r\n        } else {\r\n          Grid[i][j].isWall = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    setGrid(() => Grid);\r\n  };\r\n\r\n  function generateMaze() {\r\n    if (!hasStart || !hasEnd || visualizing) {\r\n      return;\r\n    }\r\n    visualizing = true;\r\n    setGrid(() => Rmaze(Grid));\r\n    setTimeout(() => {\r\n      visualizing = false;\r\n    }, 6000);\r\n    // for (let i = 0; i < Grid.length; i++) {\r\n    //   setTimeout(() => {\r\n    //     for (let j = 0; j < Grid[i].length; j++) {\r\n    //       setTimeout(() => {\r\n    //         const node = Grid[i][j];\r\n    //         if (!node.isStart && !node.IsEnd && node.isWall) {\r\n    //           document.getElementById(`node-${node.x}-${node.y}`).className =\r\n    //             \"Node wall\";\r\n    //         } else if (!node.isStart && !node.isEnd && !node.isWall) {\r\n    //           document.getElementById(`node-${node.x}-${node.y}`).className =\r\n    //             \"Node\";\r\n    //         }\r\n    //         if (j == Grid[i].length - 1 && i == Grid.length - 1) {\r\n    //           visualizing = false;\r\n    //         }\r\n    //       }, 0 * j);\r\n    //     }\r\n    //   }, 0 * i);\r\n    // }\r\n    visualized = false;\r\n  }\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"header\">\r\n        <h1 className=\"title\">Pathfinding Visualizer</h1>\r\n      </div>\r\n      <div className=\"header\">\r\n        <p>\r\n          click and drag to create walls - replace start and end nodes with\r\n          click\r\n        </p>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-sm\">\r\n          <button onClick={visualizePath}>Vizualize Path (A*)</button>\r\n        </div>\r\n\r\n        <div className=\"col-sm\">\r\n          <button onClick={randomWalls}>Random Walls</button>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <button onClick={Reset}>Reset</button>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <button onClick={generateMaze}>\r\n            Generate Maze (Prim's Algorithm)\r\n          </button>\r\n        </div>\r\n      </div>\r\n      {gridwithNode}\r\n    </div>\r\n  );\r\n};\r\nexport default Pathfind;\r\n"]},"metadata":{},"sourceType":"module"}