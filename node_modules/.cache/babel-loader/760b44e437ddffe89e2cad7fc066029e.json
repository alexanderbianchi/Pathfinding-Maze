{"ast":null,"code":"function shuffleArray(array){if(array.length==0){return;}for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array[0];}function getRandomItem(set){var items=Array.from(set);return items[Math.floor(Math.random()*items.length)];}var toV=[];function Rmaze(grid){var WallSetup=function WallSetup(grid){var uniqueSet=new Set();for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){var node=grid[i][j];if(i%2==0&&j%2==0){grid[i][j].addWallNeighbors(grid);shuffleArray(grid[i][j].wallNeighbors);grid[i][j].isWall=false;if(!node.isStart&&!node.IsEnd&&node.isWall){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node\";}uniqueSet.add(grid[i][j]);}else{if(!grid[i][j].isStart&&!grid[i][j].isEnd){grid[i][j].isWall=true;if(!node.isStart&&!node.IsEnd&&node.isWall){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node wall\";}}}grid[i][j].mazeStatus=\"unvisited\";}}return uniqueSet;};var frontier=new Set();var visited=new Set();var start=getRandomItem(WallSetup(grid));frontier.add(start);visited.add(start);var current=start;current.mazeStatus=\"visited\";function Recurse(grid){frontier.delete(current);var curN=current.wallNeighbors;for(var i=0;i<curN.length;i++){if(curN[i].mazeStatus==\"unvisited\"){frontier.add(curN[i]);//curN[i].connections.push(current);\n}else if(curN[i].mazeStatus===\"frontier\"){//curN[i].connections.push(current);\n}}if(frontier.size==0){return;}current=getRandomItem(frontier);visited.add(current);current.mazeStatus=\"visited\";var adj=[];for(var _i=0;_i<current.wallNeighbors.length;_i++){if(current.wallNeighbors[_i].mazeStatus==\"visited\"){adj.push(current.wallNeighbors[_i]);}}var rand=shuffleArray(adj);var x=(rand.x+1+current.x+1)/2-1;var y=(rand.y+1+current.y+1)/2-1;grid[x][y].isWall=false;toV.push([x,y]);if(frontier.size>0){Recurse(grid);}}Recurse(grid);var _loop=function _loop(i){var x=toV[i][0];var y=toV[i][1];var node=grid[x][y];setTimeout(function(){if(!node.isStart&&!node.IsEnd&&!node.isWall){document.getElementById(\"node-\".concat(node.x,\"-\").concat(node.y)).className=\"Node\";}},70*i);};for(var i=0;i<toV.length;i++){_loop(i);}return grid;}export default Rmaze;","map":{"version":3,"sources":["E:/CS Projects/visualizer/src/Algorithms/Prims Algorithm.js"],"names":["shuffleArray","array","length","i","j","Math","floor","random","temp","getRandomItem","set","items","Array","from","toV","Rmaze","grid","WallSetup","uniqueSet","Set","node","addWallNeighbors","wallNeighbors","isWall","isStart","IsEnd","document","getElementById","x","y","className","add","isEnd","mazeStatus","frontier","visited","start","current","Recurse","delete","curN","size","adj","push","rand","setTimeout"],"mappings":"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","sourcesContent":["function shuffleArray(array) {\r\n  if (array.length == 0) {\r\n    return;\r\n  }\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  return array[0];\r\n}\r\nfunction getRandomItem(set) {\r\n  let items = Array.from(set);\r\n  return items[Math.floor(Math.random() * items.length)];\r\n}\r\nlet toV = [];\r\nfunction Rmaze(grid) {\r\n  const WallSetup = (grid) => {\r\n    let uniqueSet = new Set();\r\n    for (let i = 0; i < grid.length; i++) {\r\n      for (let j = 0; j < grid[i].length; j++) {\r\n        let node = grid[i][j];\r\n        if (i % 2 == 0 && j % 2 == 0) {\r\n          grid[i][j].addWallNeighbors(grid);\r\n\r\n          shuffleArray(grid[i][j].wallNeighbors);\r\n\r\n          grid[i][j].isWall = false;\r\n\r\n          if (!node.isStart && !node.IsEnd && node.isWall) {\r\n            document.getElementById(`node-${node.x}-${node.y}`).className =\r\n              \"Node\";\r\n          }\r\n          uniqueSet.add(grid[i][j]);\r\n        } else {\r\n          if (!grid[i][j].isStart && !grid[i][j].isEnd) {\r\n            grid[i][j].isWall = true;\r\n\r\n            if (!node.isStart && !node.IsEnd && node.isWall) {\r\n              document.getElementById(`node-${node.x}-${node.y}`).className =\r\n                \"Node wall\";\r\n            }\r\n          }\r\n        }\r\n        grid[i][j].mazeStatus = \"unvisited\";\r\n      }\r\n    }\r\n    return uniqueSet;\r\n  };\r\n  let frontier = new Set();\r\n  let visited = new Set();\r\n\r\n  let start = getRandomItem(WallSetup(grid));\r\n  frontier.add(start);\r\n  visited.add(start);\r\n  let current = start;\r\n  current.mazeStatus = \"visited\";\r\n\r\n  function Recurse(grid) {\r\n    frontier.delete(current);\r\n\r\n    let curN = current.wallNeighbors;\r\n\r\n    for (let i = 0; i < curN.length; i++) {\r\n      if (curN[i].mazeStatus == \"unvisited\") {\r\n        frontier.add(curN[i]);\r\n        //curN[i].connections.push(current);\r\n      } else if (curN[i].mazeStatus === \"frontier\") {\r\n        //curN[i].connections.push(current);\r\n      }\r\n    }\r\n\r\n    if (frontier.size == 0) {\r\n      return;\r\n    }\r\n    current = getRandomItem(frontier);\r\n    visited.add(current);\r\n    current.mazeStatus = \"visited\";\r\n\r\n    let adj = [];\r\n    for (let i = 0; i < current.wallNeighbors.length; i++) {\r\n      if (current.wallNeighbors[i].mazeStatus == \"visited\") {\r\n        adj.push(current.wallNeighbors[i]);\r\n      }\r\n    }\r\n    let rand = shuffleArray(adj);\r\n\r\n    let x = (rand.x + 1 + current.x + 1) / 2 - 1;\r\n    let y = (rand.y + 1 + current.y + 1) / 2 - 1;\r\n    grid[x][y].isWall = false;\r\n\r\n    toV.push([x, y]);\r\n\r\n    if (frontier.size > 0) {\r\n      Recurse(grid);\r\n    }\r\n  }\r\n  Recurse(grid);\r\n\r\n  for (let i = 0; i < toV.length; i++) {\r\n    let x = toV[i][0];\r\n    let y = toV[i][1];\r\n    let node = grid[x][y];\r\n    setTimeout(() => {\r\n      if (!node.isStart && !node.IsEnd && !node.isWall) {\r\n        document.getElementById(`node-${node.x}-${node.y}`).className = \"Node\";\r\n      }\r\n    }, 70 * i);\r\n  }\r\n\r\n  return grid;\r\n}\r\nexport default Rmaze;\r\n"]},"metadata":{},"sourceType":"module"}