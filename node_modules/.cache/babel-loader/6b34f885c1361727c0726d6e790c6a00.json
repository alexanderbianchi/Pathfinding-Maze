{"ast":null,"code":"function shuffleArray(array){if(array.length==0){return;}for(var i=array.length-1;i>0;i--){var j=Math.floor(Math.random()*(i+1));var temp=array[i];array[i]=array[j];array[j]=temp;}return array[0];}function getRandomItem(set){var items=Array.from(set);return items[Math.floor(Math.random()*items.length)];}var toV=[];function Rmaze(grid){var WallSetup=function WallSetup(grid){var uniqueSet=new Set();for(var i=0;i<grid.length;i++){for(var j=0;j<grid[i].length;j++){if(i%2==0&&j%2==0){grid[i][j].addWallNeighbors(grid);shuffleArray(grid[i][j].wallNeighbors);grid[i][j].isWall=false;if(!grid[i][j].isStart&&!grid[i][j].isEnd&&!grid[i][j].isWall){document.getElementById(\"node-\".concat(i,\"-\").concat(j)).className=\"Node\";}uniqueSet.add(grid[i][j]);}else{if(!grid[i][j].isStart&&!grid[i][j].isEnd){grid[i][j].isWall=true;if(!grid[i][j].isStart&&!grid[i][j].IsEnd&&grid[i][j].isWall){document.getElementById(\"node-\".concat(i,\"-\").concat(j)).className=\"Node wall\";}}}grid[i][j].mazeStatus=\"unvisited\";}}return uniqueSet;};var frontier=new Set();var visited=new Set();var start=getRandomItem(WallSetup(grid));frontier.add(start);visited.add(start);var current=start;current.mazeStatus=\"visited\";function Recurse(grid){frontier.delete(current);var curN=current.wallNeighbors;for(var i=0;i<curN.length;i++){if(curN[i].mazeStatus==\"unvisited\"){frontier.add(curN[i]);//curN[i].connections.push(current);\n}else if(curN[i].mazeStatus===\"frontier\"){//curN[i].connections.push(current);\n}}if(frontier.size==0){return;}current=getRandomItem(frontier);visited.add(current);current.mazeStatus=\"visited\";var adj=[];for(var _i=0;_i<current.wallNeighbors.length;_i++){if(current.wallNeighbors[_i].mazeStatus==\"visited\"){adj.push(current.wallNeighbors[_i]);}}var rand=shuffleArray(adj);var xFall=(rand.x+1+current.x+1)/2-1;var yFall=(rand.y+1+current.y+1)/2-1;grid[xFall][yFall].isWall=false;toV.push([xFall,yFall]);if(frontier.size>0){Recurse(grid);}}Recurse(grid);var _loop=function _loop(i){var x=toV[i][0];var y=toV[i][1];if(!grid[x][y].isStart&&!grid[x][y].isEnd&&!grid[x][y].isWall){setTimeout(function(){document.getElementById(\"node-\".concat(x,\"-\").concat(y)).className=\"Node\";},i*30);}};for(var i=0;i<toV.length;i++){_loop(i);}return grid;}export default Rmaze;","map":{"version":3,"sources":["E:/CS Projects/visualizer/src/Algorithms/Prims Algorithm.js"],"names":["shuffleArray","array","length","i","j","Math","floor","random","temp","getRandomItem","set","items","Array","from","toV","Rmaze","grid","WallSetup","uniqueSet","Set","addWallNeighbors","wallNeighbors","isWall","isStart","isEnd","document","getElementById","className","add","IsEnd","mazeStatus","frontier","visited","start","current","Recurse","delete","curN","size","adj","push","rand","xFall","x","yFall","y","setTimeout"],"mappings":"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","sourcesContent":["function shuffleArray(array) {\r\n  if (array.length == 0) {\r\n    return;\r\n  }\r\n  for (var i = array.length - 1; i > 0; i--) {\r\n    var j = Math.floor(Math.random() * (i + 1));\r\n    var temp = array[i];\r\n    array[i] = array[j];\r\n    array[j] = temp;\r\n  }\r\n\r\n  return array[0];\r\n}\r\nfunction getRandomItem(set) {\r\n  let items = Array.from(set);\r\n  return items[Math.floor(Math.random() * items.length)];\r\n}\r\n\r\nvar toV = [];\r\nfunction Rmaze(grid) {\r\n  const WallSetup = (grid) => {\r\n    let uniqueSet = new Set();\r\n    for (let i = 0; i < grid.length; i++) {\r\n      for (let j = 0; j < grid[i].length; j++) {\r\n        if (i % 2 == 0 && j % 2 == 0) {\r\n          grid[i][j].addWallNeighbors(grid);\r\n\r\n          shuffleArray(grid[i][j].wallNeighbors);\r\n\r\n          grid[i][j].isWall = false;\r\n          if (!grid[i][j].isStart && !grid[i][j].isEnd && !grid[i][j].isWall) {\r\n            document.getElementById(`node-${i}-${j}`).className = \"Node\";\r\n          }\r\n          uniqueSet.add(grid[i][j]);\r\n        } else {\r\n          if (!grid[i][j].isStart && !grid[i][j].isEnd) {\r\n            grid[i][j].isWall = true;\r\n            if (!grid[i][j].isStart && !grid[i][j].IsEnd && grid[i][j].isWall) {\r\n              document.getElementById(`node-${i}-${j}`).className = \"Node wall\";\r\n            }\r\n          }\r\n        }\r\n        grid[i][j].mazeStatus = \"unvisited\";\r\n      }\r\n    }\r\n    return uniqueSet;\r\n  };\r\n  let frontier = new Set();\r\n  let visited = new Set();\r\n\r\n  let start = getRandomItem(WallSetup(grid));\r\n  frontier.add(start);\r\n  visited.add(start);\r\n  let current = start;\r\n  current.mazeStatus = \"visited\";\r\n\r\n  function Recurse(grid) {\r\n    frontier.delete(current);\r\n\r\n    let curN = current.wallNeighbors;\r\n\r\n    for (let i = 0; i < curN.length; i++) {\r\n      if (curN[i].mazeStatus == \"unvisited\") {\r\n        frontier.add(curN[i]);\r\n        //curN[i].connections.push(current);\r\n      } else if (curN[i].mazeStatus === \"frontier\") {\r\n        //curN[i].connections.push(current);\r\n      }\r\n    }\r\n\r\n    if (frontier.size == 0) {\r\n      return;\r\n    }\r\n    current = getRandomItem(frontier);\r\n    visited.add(current);\r\n    current.mazeStatus = \"visited\";\r\n\r\n    let adj = [];\r\n    for (let i = 0; i < current.wallNeighbors.length; i++) {\r\n      if (current.wallNeighbors[i].mazeStatus == \"visited\") {\r\n        adj.push(current.wallNeighbors[i]);\r\n      }\r\n    }\r\n    let rand = shuffleArray(adj);\r\n\r\n    let xFall = (rand.x + 1 + current.x + 1) / 2 - 1;\r\n    let yFall = (rand.y + 1 + current.y + 1) / 2 - 1;\r\n    grid[xFall][yFall].isWall = false;\r\n\r\n    toV.push([xFall, yFall]);\r\n\r\n    if (frontier.size > 0) {\r\n      Recurse(grid);\r\n    }\r\n  }\r\n  Recurse(grid);\r\n\r\n  for (let i = 0; i < toV.length; i++) {\r\n    let x = toV[i][0];\r\n    let y = toV[i][1];\r\n    if (!grid[x][y].isStart && !grid[x][y].isEnd && !grid[x][y].isWall) {\r\n      setTimeout(() => {\r\n        document.getElementById(`node-${x}-${y}`).className = \"Node\";\r\n      }, i * 30);\r\n    }\r\n  }\r\n\r\n  return grid;\r\n}\r\nexport default Rmaze;\r\n"]},"metadata":{},"sourceType":"module"}